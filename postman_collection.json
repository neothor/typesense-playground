{
	"info": {
		"_postman_id": "a4e173a6-f479-40a8-bbba-95d3bca0b3cc",
		"name": "Typesense",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34997695"
	},
	"item": [
		{
			"name": "Health",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{hostname}}/health",
					"host": [
						"{{hostname}}"
					],
					"path": [
						"health"
					]
				}
			},
			"response": []
		},
		{
			"name": "Keys",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{hostname}}/keys",
					"host": [
						"{{hostname}}"
					],
					"path": [
						"keys"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Administration Key",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Set Administration Env\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.environment.set(\"adminKey\", jsonData.value);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"description\": \"Administration Key\",\r\n    \"actions\": [\r\n        \"*\"\r\n    ],\r\n    \"collections\": [\r\n        \"*\"\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{hostname}}/keys",
					"host": [
						"{{hostname}}"
					],
					"path": [
						"keys"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Search Key",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Set Administration Env\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.environment.set(\"searchKey\", jsonData.value);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"description\": \"Search Key\",\r\n    \"actions\": [\r\n        \"documents:search\"\r\n    ],\r\n    \"collections\": [\r\n        \"*\"\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{hostname}}/keys",
					"host": [
						"{{hostname}}"
					],
					"path": [
						"keys"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Companies Collection",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"companies\",\r\n    \"fields\": [\r\n        {\r\n            \"name\": \"tenant\",\r\n            \"type\": \"string\"\r\n        },\r\n        {\r\n            \"name\": \"company_name\",\r\n            \"type\": \"string\"\r\n        },\r\n        {\r\n            \"name\": \"num_employees\",\r\n            \"type\": \"int32\"\r\n        },\r\n        {\r\n            \"name\": \"country\",\r\n            \"type\": \"string\",\r\n            \"facet\": true\r\n        }\r\n    ],\r\n    \"default_sorting_field\": \"num_employees\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				}
			},
			"response": []
		},
		{
			"name": "Add companies",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"id\": \"124\", \"tenant\": \"A\", \"company_name\": \"Stark Industries\", \"num_employees\": 5215, \"country\": \"US\"}\r\n{\"id\": \"125\", \"tenant\": \"A\", \"company_name\": \"Future Technology\", \"num_employees\": 1232, \"country\": \"UK\"}\r\n{\"id\": \"126\", \"tenant\": \"B\", \"company_name\": \"Random Corp.\", \"num_employees\": 531, \"country\": \"AU\"}\r\n{\"id\": \"127\", \"tenant\": \"B\", \"company_name\": \"Stark Industries\", \"num_employees\": 531, \"country\": \"AU\"}",
					"options": {
						"raw": {
							"language": "text"
						}
					}
				},
				"url": {
					"raw": "{{hostname}}/collections/:collection/documents/import?action=upsert",
					"host": [
						"{{hostname}}"
					],
					"path": [
						"collections",
						":collection",
						"documents",
						"import"
					],
					"query": [
						{
							"key": "action",
							"value": "upsert"
						}
					],
					"variable": [
						{
							"key": "collection",
							"value": "companies"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Search for Stark",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "Search for Stark with TenantA",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Your inputs\r",
							"const KEY_WITH_SEARCH_PERMISSIONS = pm.environment.get(\"searchKey\");\r",
							"const embeddedSearchParameters = {\r",
							"    filter_by: \"tenant:A\"\r",
							"};\r",
							"const EMBEDDED_SEARCH_PARAMETERS_JSON = JSON.stringify(embeddedSearchParameters);\r",
							"\r",
							"// Generate the HMAC digest\r",
							"const hmacDigest = CryptoJS.HmacSHA256(EMBEDDED_SEARCH_PARAMETERS_JSON, KEY_WITH_SEARCH_PERMISSIONS);\r",
							"const digest = CryptoJS.enc.Base64.stringify(hmacDigest);\r",
							"\r",
							"// Combine parts to form the scoped API key\r",
							"const scopedApiKeyString = digest + KEY_WITH_SEARCH_PERMISSIONS.substring(0, 4) + EMBEDDED_SEARCH_PARAMETERS_JSON;\r",
							"const scopedApiKey = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(scopedApiKeyString));\r",
							"\r",
							"// Set the scoped API key as an environment variable\r",
							"pm.environment.set(\"scopedSearchKey\", scopedApiKey);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "key",
							"value": "X-TYPESENSE-API-KEY",
							"type": "string"
						},
						{
							"key": "value",
							"value": "{{scopedSearchKey}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{hostname}}/collections/:collection/documents/search?q=stark&query_by=company_name",
					"host": [
						"{{hostname}}"
					],
					"path": [
						"collections",
						":collection",
						"documents",
						"search"
					],
					"query": [
						{
							"key": "q",
							"value": "stark"
						},
						{
							"key": "query_by",
							"value": "company_name"
						}
					],
					"variable": [
						{
							"key": "collection",
							"value": "companies"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Companies",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "xyz",
				"type": "string"
			},
			{
				"key": "key",
				"value": "X-TYPESENSE-API-KEY",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}